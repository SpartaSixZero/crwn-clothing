{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, emailSignInStart, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure, signUpStart } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    console.log(\"Sign up function generator is called\");\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n    yield put(emailSignInStart({\n      email,\n      password\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/Users/marksun/Documents/education/udemy/zero-to-mastery/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","emailSignInStart","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","signUpStart","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","console","log","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,aADF,EAEEC,aAFF,EAGEC,gBAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,aANF,EAOEC,aAPF,EAQEC,WARF,QASO,gBATP;AAWA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,EAIEC,cAJF,QAKO,+BALP;AAOA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMhB,IAAI,CAACY,yBAAD,EAA4BG,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMpB,GAAG,CACPI,aAAa,CAAC;AAAEiB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADN,CAAT;AAGD,GAND,CAME,OAAMC,KAAN,EAAa;AACb,UAAMvB,GAAG,CAACK,aAAa,CAACkB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMb,IAAI,CAACc,eAAL,CAAqBb,cAArB,CAArB;AACA,UAAMG,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAMF,KAAN,EAAa;AACb,UAAMvB,GAAG,CAACK,aAAa,CAACkB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUI,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAA1B,EAAyD;AAC9D,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMb,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMd,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAMF,KAAN,EAAa;AACbvB,IAAAA,GAAG,CAACK,aAAa,CAACkB,KAAD,CAAd,CAAH;AACD;AACF;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMf,QAAQ,GAAG,MAAMF,cAAc,EAArC;AACA,QAAI,CAACE,QAAL,EAAe;AACf,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACD,GAJD,CAIE,OAAMM,KAAN,EAAa;AACb,UAAMvB,GAAG,CAACK,aAAa,CAACkB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUU,OAAV,GAAoB;AACzB,MAAI;AACF,UAAMrB,IAAI,CAACqB,OAAL,EAAN;AACA,UAAMjC,GAAG,CAACO,cAAc,EAAf,CAAT;AACD,GAHD,CAGE,OAAMgB,KAAN,EAAa;AACb,UAAMvB,GAAG,CAACQ,cAAc,CAACe,KAAD,CAAf,CAAT;AACD;AACF;AAED,OAAO,UAAUW,MAAV,CAAiB;AAACN,EAAAA,OAAO,EAAE;AAAEO,IAAAA,WAAF;AAAeN,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB;AAAV,CAAjB,EAA6D;AAClE,MAAI;AACFM,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMb,IAAI,CAAC0B,8BAAL,CAAoCT,KAApC,EAA2CC,QAA3C,CAAvB;AAEA,UAAMhB,yBAAyB,CAACW,IAAD,EAAO;AAAEU,MAAAA;AAAF,KAAP,CAA/B;AAEA,UAAMnC,GAAG,CAACM,gBAAgB,CAAC;AAAEuB,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,CAAjB,CAAT;AACD,GAPD,CAOE,OAAMP,KAAN,EAAa;AACb,UAAMvB,GAAG,CAACU,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUgB,mBAAV,GAAgC;AACrC,QAAMxC,UAAU,CAACI,eAAe,CAACqC,oBAAjB,EAAuChB,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUiB,kBAAV,GAA+B;AACpC,QAAM1C,UAAU,CAACI,eAAe,CAACuC,mBAAjB,EAAsCf,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AACpC,QAAM5C,UAAU,CAACI,eAAe,CAACyC,kBAAjB,EAAqCZ,mBAArC,CAAhB;AACD;AAED,OAAO,UAAUa,cAAV,GAA2B;AAChC,QAAM9C,UAAU,CAACI,eAAe,CAAC2C,cAAjB,EAAiCb,OAAjC,CAAhB;AACD;AAED,OAAO,UAAUc,aAAV,GAA0B;AAC/B,QAAMhD,UAAU,CAACI,eAAe,CAAC6C,aAAjB,EAAgCd,MAAhC,CAAhB;AACD;AAED,OAAO,UAAUe,SAAV,GAAsB;AAC3B,QAAMhD,GAAG,CAAC,CACRC,IAAI,CAACqC,mBAAD,CADI,EAERrC,IAAI,CAACuC,kBAAD,CAFI,EAGRvC,IAAI,CAACyC,kBAAD,CAHI,EAIRzC,IAAI,CAAC2C,cAAD,CAJI,EAKR3C,IAAI,CAAC6C,aAAD,CALI,CAAD,CAAT;AAOD","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport {\n  signInSuccess,\n  signInFailure,\n  emailSignInStart,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess,\n  signUpFailure,\n  signUpStart,\n} from './user.actions';\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from '../../firebase/firebase.utils';\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  } catch(error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch(error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({payload: { email, password}}) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch(error) {\n    put(signInFailure(error));\n  }\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch(error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch(error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* signUp({payload: { displayName, email, password}}) {\n  try {\n    console.log(\"Sign up function generator is called\");\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n\n    yield createUserProfileDocument(user, { displayName });\n\n    yield put(emailSignInStart({ email, password}));\n  } catch(error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}